---
- name: my_playbook
  vars_files:
    - ./vars/vars_file.yml
  become: true
  remote_user: "{{run_with}}"

  hosts: "{{group_name}}"

  tasks:
   - set_fact:
      os_script: "{{ script_centos if (group_name == 'centos') else script_ubuntu }}"
      pkg_mgr: "{{ installer_centos if (group_name == 'centos') else installer_ubuntu }}"
      custom_dict:
        user_state: "{{user_state}}"
     tags:
     - facts 

   - name: run "{{os_script}}" on group "{{group_name}}"
     script: "{{os_script}}"
     tags:
     - script

   - name: install apps via "{{installer_centos}}"
     yum:
      name: "{{apps}}"
      state: "{{app_state}}"
     register: results
     when: pkg_mgr == 'yum'
     tags:
     - apps
  
   - name: install apps via "{{installer_ubuntu}}"
     apt:
      name: "{{apps}}"
      state: "{{app_state}}"
     register: results
     when: pkg_mgr == 'apt'
     tags:
     - apps
    
   - name: template a file - copy "{{src_path}}" 
     template:
       src: "{{src_path}}"
       dest: "{{dest_path}}" 
     tags:
     - file

   - name: run command "{{command}}" 
     shell: "{{command}}"
     register: results
     tags:
     - shell01

   #- debug: msg="{{results.stdout_lines}}"

   - name: setup "{{username}}" user 
     user:
      name: "{{item}}"
      password: "{{user_pass}}"
      state: "{{user_state}}"
      create_home: true
      home: /home/{{username}}
      shell: "{{shell_path}}"
      groups: "{{usergroup}}"
      comment: "{{comment}}"
     register: results
     loop:
      - "{{username}}"
     when: ansible_distribution == 'CentOS'
     tags:
     - user

   - name: remove {{username}} user home dir
     shell: rm -rvf /home/{{username}}
     register: results
     tags:
     - homedir
     when: custom_dict.user_state == 'absent'

   - name: show results
     debug:
       msg: "{{results}}"
     tags:
     - results