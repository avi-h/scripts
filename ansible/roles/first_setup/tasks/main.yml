---
   - set_fact:
      os_script: "{{script_centos if (ansible_distribution == 'CentOS') 
        else script_ubuntu}}"
      command: "{{command_centos if (ansible_distribution == 'CentOS') else command_ubuntu}}"
      usergroup: "{{usergroup_centos if (ansible_distribution == 'CentOS') else usergroup_ubuntu}}"
      custom_dict:
        user_state: "{{user_state}}"
     tags:
     - facts 

   - name: running script
     script: "{{os_script}}"
     register: script
     when: ansible_distribution  != 'Alpine'
     tags:
     - script

   - name: install apps via "{{installer_centos}}"
     yum:
      name: "{{apps}}"
      state: "{{app_state}}"
     register: results
     when: ansible_distribution  == 'CentOS'
     tags:
     - apps
  
   - name: install apps via "{{installer_ubuntu}}"
     apt:
      name: "{{apps}}"
      state: "{{app_state}}"
     register: results
     when: ansible_distribution  == 'Ubuntu'
     tags:
     - apps

   - name: install apps via "{{installer_alpine}}"
     apk:
      name: "{{apps_alpine}}"
      state: "{{app_state}}"
     register: results
     when: ansible_distribution  == 'Alpine'
     tags:
     - apps
    
   - name: template a file - copy "{{src_path}}" 
     template:
       src: "{{src_path}}"
       dest: "{{dest_path}}" 
     tags:
     - file

   - name: run shell command
     shell: "{{shell_command}}"
     register: my_shell
     when: ansible_distribution == 'CentOS'
     tags:
     - command

   #- debug: msg="{{results.stdout_lines}}"

   - name: update root password
     user:
      name: root
      password: "{{root_pass}}"
     register: root_password
     tags:
     - rootpass

   - name: add "{{usergroup_ubuntu}}" group 
     group:
      name: "{{usergroup_ubuntu}}"
      state: present
     register: results
     when: ansible_distribution  == 'Ubuntu'
     tags:
     - group

   - name: setup "{{ansible_username}}" user
     user:
      name: "{{item}}"
      password: "{{ansible_user_pass}}"
      state: "{{user_state}}"
      create_home: true
      home: /home/{{ansible_username}}
      shell: "{{shell_path}}"
      groups: "{{usergroup}}"
      comment: "{{comment}}"
     register: results
     loop:
      - "{{ansible_username}}"
     tags:
     - user

   - name: remove {{ansible_username}} user home dir
     shell: rm -rvf /home/{{ansible_username}}
     register: results
     tags:
     - homedir
     when: custom_dict.user_state == 'absent'

   - name: show results
     debug:
       msg: "{{my_shell}}"
     tags:
     - results